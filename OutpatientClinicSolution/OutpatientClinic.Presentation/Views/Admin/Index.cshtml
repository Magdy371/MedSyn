@{
    ViewData["Title"] = "Admin Dashboard";
}

<link href="~/css/AdminStyle.css" rel="stylesheet" />
<div class="container-fluid admin-dashboard">
    <div class="row">
        <!-- Sidebar Navigation -->
        <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block sidebar collapse">
            <div class="position-sticky pt-3">
                <div class="sidebar-header text-center py-4">
                    <i class="fas fa-hospital fa-3x text-gradient mb-3"></i>
                    <h4 class="text-gradient mb-0">Clinic OS</h4>
                </div>
                <ul class="nav flex-column">
                    <li class="nav-item hover-glow">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Admin" ? "active" : "")"
                           href="@Url.Action("Index", "Admin")">
                            <i class="fas fa-gauge-high me-2"></i> Dashboard
                            <div class="active-pulse"></div>
                        </a>
                    </li>
                    <li class="nav-item hover-glow">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "User" ? "active" : "")"
                           href="@Url.Action("Index", "User")">
                            <i class="fas fa-users-gear me-2"></i> Manage Users
                            <div class="active-pulse"></div>
                        </a>
                    </li>
                    <li class="nav-item hover-glow">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Doctor" ? "active" : "")"
                           href="@Url.Action("Index", "Doctor")">
                            <i class="fas fa-user-doctor me-2"></i> Doctors
                            <div class="active-pulse"></div>
                        </a>
                    </li>
                    <li class="nav-item hover-glow">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Staff" ? "active" : "")"
                           href="@Url.Action("Index", "Staff")">
                            <i class="fa-solid fa-hospital-user"></i></i> Stuff
                            <div class="active-pulse"></div>
                        </a>
                    </li>
                    <li class="nav-item hover-glow">
                        <a class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Patient" ? "active" : "")"
                           href="@Url.Action("Index", "Patient")">
                            <i class="fa-solid fa-hospital-user"></i> Patient
                            <div class="active-pulse"></div>
                        </a>
                    </li>
                </ul>
            </div>
        </nav>

        <!-- Main Content Area -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <!-- Dashboard Header -->
            <div class="dashboard-header py-4 mb-4">
                <h1 class="display-5 fw-bold text-gradient floating">
                    <i class="fas fa-shield-heart me-3"></i>Admin Hub
                </h1>
            </div>

            <!-- Management Panels Grid -->
            <div class="row g-4">
                @foreach (var panel in new[] {
                new { Title = "Departments", Icon = "fa-building", Description = "Manage hospital departments", Controller = "Department", Color = "primary" },
                new { Title = "Clinics", Icon = "fa-clinic-medical", Description = "Manage clinic locations", Controller = "Clinic", Color = "info" },
                new { Title = "Appointment", Icon = "fa-calendar-check", Description = "Manage patients appointments", Controller = "Appointment", Color = "Primary" },
                new { Title = "LabTests", Icon = "fa-user-doctor", Description = "Manage patients Lab Tests", Controller = "LabTests", Color = "success" },
                new { Title = "MedicalRecord", Icon = "fa-user-doctor", Description = "Manage patients Medical Records", Controller = "MedicalRecord", Color = "success" },
                new { Title = "Prescriptions", Icon = "fa-file-medical", Description = "Manage patients Prescriptions", Controller = "Prescription", Color = "success" },
                new { Title = "Drugs", Icon = "fa-solid fa-pills", Description = "Manage Drug Section", Controller = "Medicine", Color = "success" }

                })
                {
                    <div class="col-xxl-3 col-lg-6">
                        <div class="management-card hover-3d" data-color="@panel.Color">
                            <div class="card-icon neon-icon">
                                <i class="fa-solid @panel.Icon"></i>
                            </div>
                            <h3 class="card-title">@panel.Title</h3>
                            <p class="card-description">@panel.Description</p>
                            <a href="@Url.Action("Index", panel.Controller)" class="cyber-link">
                                Manage <i class="fas fa-arrow-right-long"></i>
                            </a>
                            <div class="cyber-border"></div>
                        </div>
                    </div>
                }
            </div>
        </main>
    </div>

    <!-- Footer -->
    <footer class="dashboard-footer mt-5 py-3 text-center">
        <p class="mb-0 text-gradient">
            <i class="fas fa-shield-virus me-2"></i>
            Clinic Management System © @DateTime.Now.Year
        </p>
    </footer>
</div>

<script>
    // Interactive card effects
    document.querySelectorAll('.management-card').forEach(card => {
        card.addEventListener('mousemove', (e) => {
            const x = e.pageX - card.offsetLeft;
            const y = e.pageY - card.offsetTop;
            card.style.transform = `
                perspective(1000px)
                rotateX(${5 - (y/20)}deg)
                rotateY(${5 - (x/20)}deg)
                translateY(-5px)
            `;
        });

        card.addEventListener('mouseleave', () => {
            card.style.transform = 'perspective(1000px) rotateX(0) rotateY(0)';
        });
    });

    // Random glitch effect
    setInterval(() => {
        if(Math.random() < 0.1) {
            document.querySelector('.sidebar-header').style.textShadow = `
                0 0 10px rgba(0,243,255,0.5),
                ${Math.random() * 5 - 2.5}px ${Math.random() * 5 - 2.5}px 0 rgba(255,0,255,0.3)
            `;
            setTimeout(() => {
                document.querySelector('.sidebar-header').style.textShadow = 'none';
            }, 50);
        }
    }, 1000);
</script>