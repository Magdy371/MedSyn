@model OutpatientClinic.DataAccess.Entities.Appointment

@{
    ViewData["Title"] = "Delete Appointment";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>@ViewData["Title"]</h1>
        <div>
            <a asp-action="Details" asp-route-id="@Model.AppointmentId" class="btn btn-info">
                <i class="bi bi-info-circle"></i> Details
            </a>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Back to List
            </a>
        </div>
    </div>

    <div class="card shadow">
        <div class="card-header bg-danger text-white">
            <h5 class="mb-0">Confirm Deletion</h5>
        </div>
        <div class="card-body">
            <h5 class="text-danger">Are you sure you want to mark this appointment as deleted?</h5>
            <hr />

            <dl class="row">
                <dt class="col-sm-3">Patient</dt>
                <dd class="col-sm-9">@($"{Model.Patient?.FirstName} {Model.Patient?.LastName}")</dd>

                <dt class="col-sm-3">Doctor</dt>
                <dd class="col-sm-9">
                    @(Model.Doctor?.DoctorNavigation != null ?
                        $"{Model.Doctor.DoctorNavigation.FirstName} {Model.Doctor.DoctorNavigation.LastName}" : "Not Assigned")
                </dd>

                <dt class="col-sm-3">Department</dt>
                <dd class="col-sm-9">@Model.Department?.DepartmentName</dd>

                <dt class="col-sm-3">Clinic</dt>
                <dd class="col-sm-9">@Model.Clinic?.ClinicName</dd>

                <dt class="col-sm-3">Date & Time</dt>
                <dd class="col-sm-9">@Model.AppointmentDateTime.ToString("MMM dd, yyyy h:mm tt")</dd>

                <dt class="col-sm-3">Status</dt>
                <dd class="col-sm-9">
                    <span class="badge @GetStatusBadgeClass(Model.Status)">
                        @(string.IsNullOrEmpty(Model.Status) ? "Pending" : Model.Status)
                    </span>
                </dd>

                <dt class="col-sm-3">Notes</dt>
                <dd class="col-sm-9">@(Model.Notes ?? "No notes available")</dd>
            </dl>

            <form asp-action="DeleteConfirmed">
                <input type="hidden" asp-for="AppointmentId" />
                <div class="text-end mt-4">
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash"></i> Confirm Delete
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

@functions {
    public string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Scheduled" => "bg-primary",
            "Confirmed" => "bg-info",
            "Completed" => "bg-success",
            "Cancelled" => "bg-danger",
            "No-Show" => "bg-warning",
            _ => "bg-secondary"
        };
    }
}